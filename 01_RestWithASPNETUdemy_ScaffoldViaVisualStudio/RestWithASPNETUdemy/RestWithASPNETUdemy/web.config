<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <system.web>

    <!--
      Cookies can be transferred not only by HTTP, but any JavaScript files loaded on a 
      page can also access the cookies. This ability can be dangerous because it makes 
      the page vulnerable to cross-site scripting (XSS) attack.

      The only way to restrict this is by setting HttpOnly flag, which means the only way 
      cookies are sent is via HTTP connection, not directly through other means (i.e., JavaScript).
      
      If you want to enable the HttpOnly flag for your application uncomment the below line of code.
    -->

    <!--<httpCookies httpOnlyCookies="true" requireSSL="true" />-->
  </system.web>
  <location path="." inheritInChildApplications="false">
    <system.webServer>
      <handlers>
        <add name="aspNetCore" path="*" verb="*" modules="AspNetCoreModuleV2" resourceType="Unspecified" />
      </handlers>
      <aspNetCore processPath="dotnet" arguments=".\RestWithASPNETUdemy.dll" stdoutLogEnabled="false" stdoutLogFile=".\logs\stdout" hostingModel="inprocess" />
      <httpProtocol>
        <customHeaders>
        	<add name="Access-Control-Allow-Origin" value="*"/>
          <add name="Content-Security-Policy" value="script-src 'self' 'unsafe-inline' 'unsafe-eval' "/>
        </customHeaders>
      </httpProtocol>
      <!--
    Default cookies are always sent on both HTTP and HTTPS requests. 
    A malicious attacker who can’t see encrypted traffic with HTTPS connection can easily 
    switch to HTTP connection and access the same cookie because it is not encrypted. 
    Therefore, we need to set the Secure flag to ensure that the cookie in encrypted when it’s created.
  
    If you want to enable the Secure flag for your application uncomment the below lines of code.
    -->
      <!--<rewrite>
        <outboundRules>
          <rule name="Use only secure cookies" preCondition="Unsecured cookie">
            <match serverVariable="RESPONSE_SET_COOKIE" pattern=".*" negate="false" />
            <action type="Rewrite" value="{R:0}; secure" />
          </rule>
          <preConditions>
            <preCondition name="Unsecured cookie">
              <add input="{RESPONSE_SET_COOKIE}" pattern="." />
              <add input="{RESPONSE_SET_COOKIE}" pattern="; secure" negate="true" />
            </preCondition>
          </preConditions>
        </outboundRules>
      </rewrite>-->
    </system.webServer>
  </location>
</configuration>